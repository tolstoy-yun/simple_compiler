Terminals unused in grammar

    S_SKIP
    BOOL


Grammar

    0 $accept: program $end

    1 program: statements

    2 statements: statement
    3           | statements statement

    4 statement: SEMICOLON
    5          | declaration SEMICOLON
    6          | LBRACE statements RBRACE
    7          | if_stmt
    8          | while_stmt
    9          | for_stmt
   10          | printf SEMICOLON
   11          | scanf SEMICOLON
   12          | expr SEMICOLON
   13          | func
   14          | return_stmt

   15 return_stmt: S_RETURN expr SEMICOLON

   16 declaration: T IDLIST

   17 func: T IDENTIFIER LPAREN RPAREN statement

   18 T: T_INT
   19  | T_CHAR
   20  | T_BOOL
   21  | T_VOID
   22  | T_STRING

   23 IDLIST: IDLIST COMMA expr
   24       | expr

   25 for_stmt: S_FOR LPAREN expr SEMICOLON expr SEMICOLON expr RPAREN statement
   26         | S_FOR LPAREN declaration SEMICOLON expr SEMICOLON expr RPAREN statement

   27 while_stmt: S_WHILE LPAREN expr RPAREN statement

   28 if_stmt: S_IF LPAREN expr RPAREN statement
   29        | S_IF LPAREN expr RPAREN statement S_ELSE statement

   30 printf: P_PRINTF LPAREN STRING RPAREN
   31       | P_PRINTF LPAREN STRING COMMA specialID RPAREN

   32 scanf: P_SCANF LPAREN STRING COMMA specialID RPAREN

   33 specialID: IDENTIFIER
   34          | QUOTE IDENTIFIER
   35          | specialID COMMA IDENTIFIER
   36          | specialID COMMA QUOTE IDENTIFIER

   37 expr: IDENTIFIER
   38     | INTEGER
   39     | CHAR
   40     | STRING
   41     | expr LOP_PLUS_ASSIGN expr
   42     | expr LOP_MINUS_ASSIGN expr
   43     | expr LOP_ASSIGN expr
   44     | expr LOP_PLUS expr
   45     | expr LOP_MINUS expr
   46     | expr LOP_MUL expr
   47     | expr LOP_DIV expr
   48     | expr LOP_MOD expr
   49     | expr LOP_INC
   50     | expr LOP_DEC
   51     | expr LOP_AND expr
   52     | expr LOP_OR expr
   53     | LOP_OPPSITE expr
   54     | expr LOP_LE expr
   55     | expr LOP_GE expr
   56     | expr LOP_NZ expr
   57     | expr LOP_GT expr
   58     | expr LOP_LT expr
   59     | expr LOP_EQ expr
   60     | LPAREN expr RPAREN
   61     | LOP_MINUS expr
   62     | LOP_PLUS expr


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    T_CHAR (258) 19
    T_INT (259) 18
    T_STRING (260) 22
    T_BOOL (261) 20
    T_VOID (262) 21
    S_FOR (263) 25 26
    S_IF (264) 28 29
    S_WHILE (265) 27
    S_ELSE (266) 29
    S_SKIP (267)
    S_RETURN (268) 15
    P_PRINTF (269) 30 31
    P_SCANF (270) 32
    LOP_ASSIGN (271) 43
    LOP_PLUS (272) 44 62
    LOP_MINUS (273) 45 61
    LOP_MUL (274) 46
    LOP_DIV (275) 47
    LOP_MOD (276) 48
    LOP_INC (277) 49
    LOP_DEC (278) 50
    LOP_PLUS_ASSIGN (279) 41
    LOP_MINUS_ASSIGN (280) 42
    LOP_AND (281) 51
    LOP_OR (282) 52
    LOP_OPPSITE (283) 53
    LOP_LE (284) 54
    LOP_GE (285) 55
    LOP_NZ (286) 56
    LOP_GT (287) 57
    LOP_LT (288) 58
    LOP_EQ (289) 59
    SEMICOLON (290) 4 5 10 11 12 15 25 26
    COMMA (291) 23 31 32 35 36
    LPAREN (292) 17 25 26 27 28 29 30 31 32 60
    RPAREN (293) 17 25 26 27 28 29 30 31 32 60
    LBRACE (294) 6
    RBRACE (295) 6
    QUOTE (296) 34 36
    IDENTIFIER (297) 17 33 34 35 36 37
    INTEGER (298) 38
    CHAR (299) 39
    BOOL (300)
    STRING (301) 30 31 32 40
    LOWER_THAN_ELSE (302)


Nonterminals, with rules where they appear

    $accept (48)
        on left: 0
    program (49)
        on left: 1
        on right: 0
    statements (50)
        on left: 2 3
        on right: 1 3 6
    statement (51)
        on left: 4 5 6 7 8 9 10 11 12 13 14
        on right: 2 3 17 25 26 27 28 29
    return_stmt (52)
        on left: 15
        on right: 14
    declaration (53)
        on left: 16
        on right: 5 26
    func (54)
        on left: 17
        on right: 13
    T (55)
        on left: 18 19 20 21 22
        on right: 16 17
    IDLIST (56)
        on left: 23 24
        on right: 16 23
    for_stmt (57)
        on left: 25 26
        on right: 9
    while_stmt (58)
        on left: 27
        on right: 8
    if_stmt (59)
        on left: 28 29
        on right: 7
    printf (60)
        on left: 30 31
        on right: 10
    scanf (61)
        on left: 32
        on right: 11
    specialID (62)
        on left: 33 34 35 36
        on right: 31 32 35 36
    expr (63)
        on left: 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62
        on right: 12 15 23 24 25 26 27 28 29 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62


State 0

    0 $accept: . program $end

    T_CHAR       shift, and go to state 1
    T_INT        shift, and go to state 2
    T_STRING     shift, and go to state 3
    T_BOOL       shift, and go to state 4
    T_VOID       shift, and go to state 5
    S_FOR        shift, and go to state 6
    S_IF         shift, and go to state 7
    S_WHILE      shift, and go to state 8
    S_RETURN     shift, and go to state 9
    P_PRINTF     shift, and go to state 10
    P_SCANF      shift, and go to state 11
    LOP_PLUS     shift, and go to state 12
    LOP_MINUS    shift, and go to state 13
    LOP_OPPSITE  shift, and go to state 14
    SEMICOLON    shift, and go to state 15
    LPAREN       shift, and go to state 16
    LBRACE       shift, and go to state 17
    IDENTIFIER   shift, and go to state 18
    INTEGER      shift, and go to state 19
    CHAR         shift, and go to state 20
    STRING       shift, and go to state 21

    program      go to state 22
    statements   go to state 23
    statement    go to state 24
    return_stmt  go to state 25
    declaration  go to state 26
    func         go to state 27
    T            go to state 28
    for_stmt     go to state 29
    while_stmt   go to state 30
    if_stmt      go to state 31
    printf       go to state 32
    scanf        go to state 33
    expr         go to state 34


State 1

   19 T: T_CHAR .

    $default  reduce using rule 19 (T)


State 2

   18 T: T_INT .

    $default  reduce using rule 18 (T)


State 3

   22 T: T_STRING .

    $default  reduce using rule 22 (T)


State 4

   20 T: T_BOOL .

    $default  reduce using rule 20 (T)


State 5

   21 T: T_VOID .

    $default  reduce using rule 21 (T)


State 6

   25 for_stmt: S_FOR . LPAREN expr SEMICOLON expr SEMICOLON expr RPAREN statement
   26         | S_FOR . LPAREN declaration SEMICOLON expr SEMICOLON expr RPAREN statement

    LPAREN  shift, and go to state 35


State 7

   28 if_stmt: S_IF . LPAREN expr RPAREN statement
   29        | S_IF . LPAREN expr RPAREN statement S_ELSE statement

    LPAREN  shift, and go to state 36


State 8

   27 while_stmt: S_WHILE . LPAREN expr RPAREN statement

    LPAREN  shift, and go to state 37


State 9

   15 return_stmt: S_RETURN . expr SEMICOLON

    LOP_PLUS     shift, and go to state 12
    LOP_MINUS    shift, and go to state 13
    LOP_OPPSITE  shift, and go to state 14
    LPAREN       shift, and go to state 16
    IDENTIFIER   shift, and go to state 18
    INTEGER      shift, and go to state 19
    CHAR         shift, and go to state 20
    STRING       shift, and go to state 21

    expr  go to state 38


State 10

   30 printf: P_PRINTF . LPAREN STRING RPAREN
   31       | P_PRINTF . LPAREN STRING COMMA specialID RPAREN

    LPAREN  shift, and go to state 39


State 11

   32 scanf: P_SCANF . LPAREN STRING COMMA specialID RPAREN

    LPAREN  shift, and go to state 40


State 12

   62 expr: LOP_PLUS . expr

    LOP_PLUS     shift, and go to state 12
    LOP_MINUS    shift, and go to state 13
    LOP_OPPSITE  shift, and go to state 14
    LPAREN       shift, and go to state 16
    IDENTIFIER   shift, and go to state 18
    INTEGER      shift, and go to state 19
    CHAR         shift, and go to state 20
    STRING       shift, and go to state 21

    expr  go to state 41


State 13

   61 expr: LOP_MINUS . expr

    LOP_PLUS     shift, and go to state 12
    LOP_MINUS    shift, and go to state 13
    LOP_OPPSITE  shift, and go to state 14
    LPAREN       shift, and go to state 16
    IDENTIFIER   shift, and go to state 18
    INTEGER      shift, and go to state 19
    CHAR         shift, and go to state 20
    STRING       shift, and go to state 21

    expr  go to state 42


State 14

   53 expr: LOP_OPPSITE . expr

    LOP_PLUS     shift, and go to state 12
    LOP_MINUS    shift, and go to state 13
    LOP_OPPSITE  shift, and go to state 14
    LPAREN       shift, and go to state 16
    IDENTIFIER   shift, and go to state 18
    INTEGER      shift, and go to state 19
    CHAR         shift, and go to state 20
    STRING       shift, and go to state 21

    expr  go to state 43


State 15

    4 statement: SEMICOLON .

    $default  reduce using rule 4 (statement)


State 16

   60 expr: LPAREN . expr RPAREN

    LOP_PLUS     shift, and go to state 12
    LOP_MINUS    shift, and go to state 13
    LOP_OPPSITE  shift, and go to state 14
    LPAREN       shift, and go to state 16
    IDENTIFIER   shift, and go to state 18
    INTEGER      shift, and go to state 19
    CHAR         shift, and go to state 20
    STRING       shift, and go to state 21

    expr  go to state 44


State 17

    6 statement: LBRACE . statements RBRACE

    T_CHAR       shift, and go to state 1
    T_INT        shift, and go to state 2
    T_STRING     shift, and go to state 3
    T_BOOL       shift, and go to state 4
    T_VOID       shift, and go to state 5
    S_FOR        shift, and go to state 6
    S_IF         shift, and go to state 7
    S_WHILE      shift, and go to state 8
    S_RETURN     shift, and go to state 9
    P_PRINTF     shift, and go to state 10
    P_SCANF      shift, and go to state 11
    LOP_PLUS     shift, and go to state 12
    LOP_MINUS    shift, and go to state 13
    LOP_OPPSITE  shift, and go to state 14
    SEMICOLON    shift, and go to state 15
    LPAREN       shift, and go to state 16
    LBRACE       shift, and go to state 17
    IDENTIFIER   shift, and go to state 18
    INTEGER      shift, and go to state 19
    CHAR         shift, and go to state 20
    STRING       shift, and go to state 21

    statements   go to state 45
    statement    go to state 24
    return_stmt  go to state 25
    declaration  go to state 26
    func         go to state 27
    T            go to state 28
    for_stmt     go to state 29
    while_stmt   go to state 30
    if_stmt      go to state 31
    printf       go to state 32
    scanf        go to state 33
    expr         go to state 34


State 18

   37 expr: IDENTIFIER .

    $default  reduce using rule 37 (expr)


State 19

   38 expr: INTEGER .

    $default  reduce using rule 38 (expr)


State 20

   39 expr: CHAR .

    $default  reduce using rule 39 (expr)


State 21

   40 expr: STRING .

    $default  reduce using rule 40 (expr)


State 22

    0 $accept: program . $end

    $end  shift, and go to state 46


State 23

    1 program: statements .
    3 statements: statements . statement

    T_CHAR       shift, and go to state 1
    T_INT        shift, and go to state 2
    T_STRING     shift, and go to state 3
    T_BOOL       shift, and go to state 4
    T_VOID       shift, and go to state 5
    S_FOR        shift, and go to state 6
    S_IF         shift, and go to state 7
    S_WHILE      shift, and go to state 8
    S_RETURN     shift, and go to state 9
    P_PRINTF     shift, and go to state 10
    P_SCANF      shift, and go to state 11
    LOP_PLUS     shift, and go to state 12
    LOP_MINUS    shift, and go to state 13
    LOP_OPPSITE  shift, and go to state 14
    SEMICOLON    shift, and go to state 15
    LPAREN       shift, and go to state 16
    LBRACE       shift, and go to state 17
    IDENTIFIER   shift, and go to state 18
    INTEGER      shift, and go to state 19
    CHAR         shift, and go to state 20
    STRING       shift, and go to state 21

    $default  reduce using rule 1 (program)

    statement    go to state 47
    return_stmt  go to state 25
    declaration  go to state 26
    func         go to state 27
    T            go to state 28
    for_stmt     go to state 29
    while_stmt   go to state 30
    if_stmt      go to state 31
    printf       go to state 32
    scanf        go to state 33
    expr         go to state 34


State 24

    2 statements: statement .

    $default  reduce using rule 2 (statements)


State 25

   14 statement: return_stmt .

    $default  reduce using rule 14 (statement)


State 26

    5 statement: declaration . SEMICOLON

    SEMICOLON  shift, and go to state 48


State 27

   13 statement: func .

    $default  reduce using rule 13 (statement)


State 28

   16 declaration: T . IDLIST
   17 func: T . IDENTIFIER LPAREN RPAREN statement

    LOP_PLUS     shift, and go to state 12
    LOP_MINUS    shift, and go to state 13
    LOP_OPPSITE  shift, and go to state 14
    LPAREN       shift, and go to state 16
    IDENTIFIER   shift, and go to state 49
    INTEGER      shift, and go to state 19
    CHAR         shift, and go to state 20
    STRING       shift, and go to state 21

    IDLIST  go to state 50
    expr    go to state 51


State 29

    9 statement: for_stmt .

    $default  reduce using rule 9 (statement)


State 30

    8 statement: while_stmt .

    $default  reduce using rule 8 (statement)


State 31

    7 statement: if_stmt .

    $default  reduce using rule 7 (statement)


State 32

   10 statement: printf . SEMICOLON

    SEMICOLON  shift, and go to state 52


State 33

   11 statement: scanf . SEMICOLON

    SEMICOLON  shift, and go to state 53


State 34

   12 statement: expr . SEMICOLON
   41 expr: expr . LOP_PLUS_ASSIGN expr
   42     | expr . LOP_MINUS_ASSIGN expr
   43     | expr . LOP_ASSIGN expr
   44     | expr . LOP_PLUS expr
   45     | expr . LOP_MINUS expr
   46     | expr . LOP_MUL expr
   47     | expr . LOP_DIV expr
   48     | expr . LOP_MOD expr
   49     | expr . LOP_INC
   50     | expr . LOP_DEC
   51     | expr . LOP_AND expr
   52     | expr . LOP_OR expr
   54     | expr . LOP_LE expr
   55     | expr . LOP_GE expr
   56     | expr . LOP_NZ expr
   57     | expr . LOP_GT expr
   58     | expr . LOP_LT expr
   59     | expr . LOP_EQ expr

    LOP_ASSIGN        shift, and go to state 54
    LOP_PLUS          shift, and go to state 55
    LOP_MINUS         shift, and go to state 56
    LOP_MUL           shift, and go to state 57
    LOP_DIV           shift, and go to state 58
    LOP_MOD           shift, and go to state 59
    LOP_INC           shift, and go to state 60
    LOP_DEC           shift, and go to state 61
    LOP_PLUS_ASSIGN   shift, and go to state 62
    LOP_MINUS_ASSIGN  shift, and go to state 63
    LOP_AND           shift, and go to state 64
    LOP_OR            shift, and go to state 65
    LOP_LE            shift, and go to state 66
    LOP_GE            shift, and go to state 67
    LOP_NZ            shift, and go to state 68
    LOP_GT            shift, and go to state 69
    LOP_LT            shift, and go to state 70
    LOP_EQ            shift, and go to state 71
    SEMICOLON         shift, and go to state 72


State 35

   25 for_stmt: S_FOR LPAREN . expr SEMICOLON expr SEMICOLON expr RPAREN statement
   26         | S_FOR LPAREN . declaration SEMICOLON expr SEMICOLON expr RPAREN statement

    T_CHAR       shift, and go to state 1
    T_INT        shift, and go to state 2
    T_STRING     shift, and go to state 3
    T_BOOL       shift, and go to state 4
    T_VOID       shift, and go to state 5
    LOP_PLUS     shift, and go to state 12
    LOP_MINUS    shift, and go to state 13
    LOP_OPPSITE  shift, and go to state 14
    LPAREN       shift, and go to state 16
    IDENTIFIER   shift, and go to state 18
    INTEGER      shift, and go to state 19
    CHAR         shift, and go to state 20
    STRING       shift, and go to state 21

    declaration  go to state 73
    T            go to state 74
    expr         go to state 75


State 36

   28 if_stmt: S_IF LPAREN . expr RPAREN statement
   29        | S_IF LPAREN . expr RPAREN statement S_ELSE statement

    LOP_PLUS     shift, and go to state 12
    LOP_MINUS    shift, and go to state 13
    LOP_OPPSITE  shift, and go to state 14
    LPAREN       shift, and go to state 16
    IDENTIFIER   shift, and go to state 18
    INTEGER      shift, and go to state 19
    CHAR         shift, and go to state 20
    STRING       shift, and go to state 21

    expr  go to state 76


State 37

   27 while_stmt: S_WHILE LPAREN . expr RPAREN statement

    LOP_PLUS     shift, and go to state 12
    LOP_MINUS    shift, and go to state 13
    LOP_OPPSITE  shift, and go to state 14
    LPAREN       shift, and go to state 16
    IDENTIFIER   shift, and go to state 18
    INTEGER      shift, and go to state 19
    CHAR         shift, and go to state 20
    STRING       shift, and go to state 21

    expr  go to state 77


State 38

   15 return_stmt: S_RETURN expr . SEMICOLON
   41 expr: expr . LOP_PLUS_ASSIGN expr
   42     | expr . LOP_MINUS_ASSIGN expr
   43     | expr . LOP_ASSIGN expr
   44     | expr . LOP_PLUS expr
   45     | expr . LOP_MINUS expr
   46     | expr . LOP_MUL expr
   47     | expr . LOP_DIV expr
   48     | expr . LOP_MOD expr
   49     | expr . LOP_INC
   50     | expr . LOP_DEC
   51     | expr . LOP_AND expr
   52     | expr . LOP_OR expr
   54     | expr . LOP_LE expr
   55     | expr . LOP_GE expr
   56     | expr . LOP_NZ expr
   57     | expr . LOP_GT expr
   58     | expr . LOP_LT expr
   59     | expr . LOP_EQ expr

    LOP_ASSIGN        shift, and go to state 54
    LOP_PLUS          shift, and go to state 55
    LOP_MINUS         shift, and go to state 56
    LOP_MUL           shift, and go to state 57
    LOP_DIV           shift, and go to state 58
    LOP_MOD           shift, and go to state 59
    LOP_INC           shift, and go to state 60
    LOP_DEC           shift, and go to state 61
    LOP_PLUS_ASSIGN   shift, and go to state 62
    LOP_MINUS_ASSIGN  shift, and go to state 63
    LOP_AND           shift, and go to state 64
    LOP_OR            shift, and go to state 65
    LOP_LE            shift, and go to state 66
    LOP_GE            shift, and go to state 67
    LOP_NZ            shift, and go to state 68
    LOP_GT            shift, and go to state 69
    LOP_LT            shift, and go to state 70
    LOP_EQ            shift, and go to state 71
    SEMICOLON         shift, and go to state 78


State 39

   30 printf: P_PRINTF LPAREN . STRING RPAREN
   31       | P_PRINTF LPAREN . STRING COMMA specialID RPAREN

    STRING  shift, and go to state 79


State 40

   32 scanf: P_SCANF LPAREN . STRING COMMA specialID RPAREN

    STRING  shift, and go to state 80


State 41

   41 expr: expr . LOP_PLUS_ASSIGN expr
   42     | expr . LOP_MINUS_ASSIGN expr
   43     | expr . LOP_ASSIGN expr
   44     | expr . LOP_PLUS expr
   45     | expr . LOP_MINUS expr
   46     | expr . LOP_MUL expr
   47     | expr . LOP_DIV expr
   48     | expr . LOP_MOD expr
   49     | expr . LOP_INC
   50     | expr . LOP_DEC
   51     | expr . LOP_AND expr
   52     | expr . LOP_OR expr
   54     | expr . LOP_LE expr
   55     | expr . LOP_GE expr
   56     | expr . LOP_NZ expr
   57     | expr . LOP_GT expr
   58     | expr . LOP_LT expr
   59     | expr . LOP_EQ expr
   62     | LOP_PLUS expr .

    LOP_MUL  shift, and go to state 57
    LOP_DIV  shift, and go to state 58
    LOP_MOD  shift, and go to state 59
    LOP_INC  shift, and go to state 60
    LOP_DEC  shift, and go to state 61

    $default  reduce using rule 62 (expr)


State 42

   41 expr: expr . LOP_PLUS_ASSIGN expr
   42     | expr . LOP_MINUS_ASSIGN expr
   43     | expr . LOP_ASSIGN expr
   44     | expr . LOP_PLUS expr
   45     | expr . LOP_MINUS expr
   46     | expr . LOP_MUL expr
   47     | expr . LOP_DIV expr
   48     | expr . LOP_MOD expr
   49     | expr . LOP_INC
   50     | expr . LOP_DEC
   51     | expr . LOP_AND expr
   52     | expr . LOP_OR expr
   54     | expr . LOP_LE expr
   55     | expr . LOP_GE expr
   56     | expr . LOP_NZ expr
   57     | expr . LOP_GT expr
   58     | expr . LOP_LT expr
   59     | expr . LOP_EQ expr
   61     | LOP_MINUS expr .

    LOP_MUL  shift, and go to state 57
    LOP_DIV  shift, and go to state 58
    LOP_MOD  shift, and go to state 59
    LOP_INC  shift, and go to state 60
    LOP_DEC  shift, and go to state 61

    $default  reduce using rule 61 (expr)


State 43

   41 expr: expr . LOP_PLUS_ASSIGN expr
   42     | expr . LOP_MINUS_ASSIGN expr
   43     | expr . LOP_ASSIGN expr
   44     | expr . LOP_PLUS expr
   45     | expr . LOP_MINUS expr
   46     | expr . LOP_MUL expr
   47     | expr . LOP_DIV expr
   48     | expr . LOP_MOD expr
   49     | expr . LOP_INC
   50     | expr . LOP_DEC
   51     | expr . LOP_AND expr
   52     | expr . LOP_OR expr
   53     | LOP_OPPSITE expr .
   54     | expr . LOP_LE expr
   55     | expr . LOP_GE expr
   56     | expr . LOP_NZ expr
   57     | expr . LOP_GT expr
   58     | expr . LOP_LT expr
   59     | expr . LOP_EQ expr

    LOP_INC  shift, and go to state 60
    LOP_DEC  shift, and go to state 61

    $default  reduce using rule 53 (expr)


State 44

   41 expr: expr . LOP_PLUS_ASSIGN expr
   42     | expr . LOP_MINUS_ASSIGN expr
   43     | expr . LOP_ASSIGN expr
   44     | expr . LOP_PLUS expr
   45     | expr . LOP_MINUS expr
   46     | expr . LOP_MUL expr
   47     | expr . LOP_DIV expr
   48     | expr . LOP_MOD expr
   49     | expr . LOP_INC
   50     | expr . LOP_DEC
   51     | expr . LOP_AND expr
   52     | expr . LOP_OR expr
   54     | expr . LOP_LE expr
   55     | expr . LOP_GE expr
   56     | expr . LOP_NZ expr
   57     | expr . LOP_GT expr
   58     | expr . LOP_LT expr
   59     | expr . LOP_EQ expr
   60     | LPAREN expr . RPAREN

    LOP_ASSIGN        shift, and go to state 54
    LOP_PLUS          shift, and go to state 55
    LOP_MINUS         shift, and go to state 56
    LOP_MUL           shift, and go to state 57
    LOP_DIV           shift, and go to state 58
    LOP_MOD           shift, and go to state 59
    LOP_INC           shift, and go to state 60
    LOP_DEC           shift, and go to state 61
    LOP_PLUS_ASSIGN   shift, and go to state 62
    LOP_MINUS_ASSIGN  shift, and go to state 63
    LOP_AND           shift, and go to state 64
    LOP_OR            shift, and go to state 65
    LOP_LE            shift, and go to state 66
    LOP_GE            shift, and go to state 67
    LOP_NZ            shift, and go to state 68
    LOP_GT            shift, and go to state 69
    LOP_LT            shift, and go to state 70
    LOP_EQ            shift, and go to state 71
    RPAREN            shift, and go to state 81


State 45

    3 statements: statements . statement
    6 statement: LBRACE statements . RBRACE

    T_CHAR       shift, and go to state 1
    T_INT        shift, and go to state 2
    T_STRING     shift, and go to state 3
    T_BOOL       shift, and go to state 4
    T_VOID       shift, and go to state 5
    S_FOR        shift, and go to state 6
    S_IF         shift, and go to state 7
    S_WHILE      shift, and go to state 8
    S_RETURN     shift, and go to state 9
    P_PRINTF     shift, and go to state 10
    P_SCANF      shift, and go to state 11
    LOP_PLUS     shift, and go to state 12
    LOP_MINUS    shift, and go to state 13
    LOP_OPPSITE  shift, and go to state 14
    SEMICOLON    shift, and go to state 15
    LPAREN       shift, and go to state 16
    LBRACE       shift, and go to state 17
    RBRACE       shift, and go to state 82
    IDENTIFIER   shift, and go to state 18
    INTEGER      shift, and go to state 19
    CHAR         shift, and go to state 20
    STRING       shift, and go to state 21

    statement    go to state 47
    return_stmt  go to state 25
    declaration  go to state 26
    func         go to state 27
    T            go to state 28
    for_stmt     go to state 29
    while_stmt   go to state 30
    if_stmt      go to state 31
    printf       go to state 32
    scanf        go to state 33
    expr         go to state 34


State 46

    0 $accept: program $end .

    $default  accept


State 47

    3 statements: statements statement .

    $default  reduce using rule 3 (statements)


State 48

    5 statement: declaration SEMICOLON .

    $default  reduce using rule 5 (statement)


State 49

   17 func: T IDENTIFIER . LPAREN RPAREN statement
   37 expr: IDENTIFIER .

    LPAREN  shift, and go to state 83

    $default  reduce using rule 37 (expr)


State 50

   16 declaration: T IDLIST .
   23 IDLIST: IDLIST . COMMA expr

    COMMA  shift, and go to state 84

    $default  reduce using rule 16 (declaration)


State 51

   24 IDLIST: expr .
   41 expr: expr . LOP_PLUS_ASSIGN expr
   42     | expr . LOP_MINUS_ASSIGN expr
   43     | expr . LOP_ASSIGN expr
   44     | expr . LOP_PLUS expr
   45     | expr . LOP_MINUS expr
   46     | expr . LOP_MUL expr
   47     | expr . LOP_DIV expr
   48     | expr . LOP_MOD expr
   49     | expr . LOP_INC
   50     | expr . LOP_DEC
   51     | expr . LOP_AND expr
   52     | expr . LOP_OR expr
   54     | expr . LOP_LE expr
   55     | expr . LOP_GE expr
   56     | expr . LOP_NZ expr
   57     | expr . LOP_GT expr
   58     | expr . LOP_LT expr
   59     | expr . LOP_EQ expr

    LOP_ASSIGN        shift, and go to state 54
    LOP_PLUS          shift, and go to state 55
    LOP_MINUS         shift, and go to state 56
    LOP_MUL           shift, and go to state 57
    LOP_DIV           shift, and go to state 58
    LOP_MOD           shift, and go to state 59
    LOP_INC           shift, and go to state 60
    LOP_DEC           shift, and go to state 61
    LOP_PLUS_ASSIGN   shift, and go to state 62
    LOP_MINUS_ASSIGN  shift, and go to state 63
    LOP_AND           shift, and go to state 64
    LOP_OR            shift, and go to state 65
    LOP_LE            shift, and go to state 66
    LOP_GE            shift, and go to state 67
    LOP_NZ            shift, and go to state 68
    LOP_GT            shift, and go to state 69
    LOP_LT            shift, and go to state 70
    LOP_EQ            shift, and go to state 71

    $default  reduce using rule 24 (IDLIST)


State 52

   10 statement: printf SEMICOLON .

    $default  reduce using rule 10 (statement)


State 53

   11 statement: scanf SEMICOLON .

    $default  reduce using rule 11 (statement)


State 54

   43 expr: expr LOP_ASSIGN . expr

    LOP_PLUS     shift, and go to state 12
    LOP_MINUS    shift, and go to state 13
    LOP_OPPSITE  shift, and go to state 14
    LPAREN       shift, and go to state 16
    IDENTIFIER   shift, and go to state 18
    INTEGER      shift, and go to state 19
    CHAR         shift, and go to state 20
    STRING       shift, and go to state 21

    expr  go to state 85


State 55

   44 expr: expr LOP_PLUS . expr

    LOP_PLUS     shift, and go to state 12
    LOP_MINUS    shift, and go to state 13
    LOP_OPPSITE  shift, and go to state 14
    LPAREN       shift, and go to state 16
    IDENTIFIER   shift, and go to state 18
    INTEGER      shift, and go to state 19
    CHAR         shift, and go to state 20
    STRING       shift, and go to state 21

    expr  go to state 86


State 56

   45 expr: expr LOP_MINUS . expr

    LOP_PLUS     shift, and go to state 12
    LOP_MINUS    shift, and go to state 13
    LOP_OPPSITE  shift, and go to state 14
    LPAREN       shift, and go to state 16
    IDENTIFIER   shift, and go to state 18
    INTEGER      shift, and go to state 19
    CHAR         shift, and go to state 20
    STRING       shift, and go to state 21

    expr  go to state 87


State 57

   46 expr: expr LOP_MUL . expr

    LOP_PLUS     shift, and go to state 12
    LOP_MINUS    shift, and go to state 13
    LOP_OPPSITE  shift, and go to state 14
    LPAREN       shift, and go to state 16
    IDENTIFIER   shift, and go to state 18
    INTEGER      shift, and go to state 19
    CHAR         shift, and go to state 20
    STRING       shift, and go to state 21

    expr  go to state 88


State 58

   47 expr: expr LOP_DIV . expr

    LOP_PLUS     shift, and go to state 12
    LOP_MINUS    shift, and go to state 13
    LOP_OPPSITE  shift, and go to state 14
    LPAREN       shift, and go to state 16
    IDENTIFIER   shift, and go to state 18
    INTEGER      shift, and go to state 19
    CHAR         shift, and go to state 20
    STRING       shift, and go to state 21

    expr  go to state 89


State 59

   48 expr: expr LOP_MOD . expr

    LOP_PLUS     shift, and go to state 12
    LOP_MINUS    shift, and go to state 13
    LOP_OPPSITE  shift, and go to state 14
    LPAREN       shift, and go to state 16
    IDENTIFIER   shift, and go to state 18
    INTEGER      shift, and go to state 19
    CHAR         shift, and go to state 20
    STRING       shift, and go to state 21

    expr  go to state 90


State 60

   49 expr: expr LOP_INC .

    $default  reduce using rule 49 (expr)


State 61

   50 expr: expr LOP_DEC .

    $default  reduce using rule 50 (expr)


State 62

   41 expr: expr LOP_PLUS_ASSIGN . expr

    LOP_PLUS     shift, and go to state 12
    LOP_MINUS    shift, and go to state 13
    LOP_OPPSITE  shift, and go to state 14
    LPAREN       shift, and go to state 16
    IDENTIFIER   shift, and go to state 18
    INTEGER      shift, and go to state 19
    CHAR         shift, and go to state 20
    STRING       shift, and go to state 21

    expr  go to state 91


State 63

   42 expr: expr LOP_MINUS_ASSIGN . expr

    LOP_PLUS     shift, and go to state 12
    LOP_MINUS    shift, and go to state 13
    LOP_OPPSITE  shift, and go to state 14
    LPAREN       shift, and go to state 16
    IDENTIFIER   shift, and go to state 18
    INTEGER      shift, and go to state 19
    CHAR         shift, and go to state 20
    STRING       shift, and go to state 21

    expr  go to state 92


State 64

   51 expr: expr LOP_AND . expr

    LOP_PLUS     shift, and go to state 12
    LOP_MINUS    shift, and go to state 13
    LOP_OPPSITE  shift, and go to state 14
    LPAREN       shift, and go to state 16
    IDENTIFIER   shift, and go to state 18
    INTEGER      shift, and go to state 19
    CHAR         shift, and go to state 20
    STRING       shift, and go to state 21

    expr  go to state 93


State 65

   52 expr: expr LOP_OR . expr

    LOP_PLUS     shift, and go to state 12
    LOP_MINUS    shift, and go to state 13
    LOP_OPPSITE  shift, and go to state 14
    LPAREN       shift, and go to state 16
    IDENTIFIER   shift, and go to state 18
    INTEGER      shift, and go to state 19
    CHAR         shift, and go to state 20
    STRING       shift, and go to state 21

    expr  go to state 94


State 66

   54 expr: expr LOP_LE . expr

    LOP_PLUS     shift, and go to state 12
    LOP_MINUS    shift, and go to state 13
    LOP_OPPSITE  shift, and go to state 14
    LPAREN       shift, and go to state 16
    IDENTIFIER   shift, and go to state 18
    INTEGER      shift, and go to state 19
    CHAR         shift, and go to state 20
    STRING       shift, and go to state 21

    expr  go to state 95


State 67

   55 expr: expr LOP_GE . expr

    LOP_PLUS     shift, and go to state 12
    LOP_MINUS    shift, and go to state 13
    LOP_OPPSITE  shift, and go to state 14
    LPAREN       shift, and go to state 16
    IDENTIFIER   shift, and go to state 18
    INTEGER      shift, and go to state 19
    CHAR         shift, and go to state 20
    STRING       shift, and go to state 21

    expr  go to state 96


State 68

   56 expr: expr LOP_NZ . expr

    LOP_PLUS     shift, and go to state 12
    LOP_MINUS    shift, and go to state 13
    LOP_OPPSITE  shift, and go to state 14
    LPAREN       shift, and go to state 16
    IDENTIFIER   shift, and go to state 18
    INTEGER      shift, and go to state 19
    CHAR         shift, and go to state 20
    STRING       shift, and go to state 21

    expr  go to state 97


State 69

   57 expr: expr LOP_GT . expr

    LOP_PLUS     shift, and go to state 12
    LOP_MINUS    shift, and go to state 13
    LOP_OPPSITE  shift, and go to state 14
    LPAREN       shift, and go to state 16
    IDENTIFIER   shift, and go to state 18
    INTEGER      shift, and go to state 19
    CHAR         shift, and go to state 20
    STRING       shift, and go to state 21

    expr  go to state 98


State 70

   58 expr: expr LOP_LT . expr

    LOP_PLUS     shift, and go to state 12
    LOP_MINUS    shift, and go to state 13
    LOP_OPPSITE  shift, and go to state 14
    LPAREN       shift, and go to state 16
    IDENTIFIER   shift, and go to state 18
    INTEGER      shift, and go to state 19
    CHAR         shift, and go to state 20
    STRING       shift, and go to state 21

    expr  go to state 99


State 71

   59 expr: expr LOP_EQ . expr

    LOP_PLUS     shift, and go to state 12
    LOP_MINUS    shift, and go to state 13
    LOP_OPPSITE  shift, and go to state 14
    LPAREN       shift, and go to state 16
    IDENTIFIER   shift, and go to state 18
    INTEGER      shift, and go to state 19
    CHAR         shift, and go to state 20
    STRING       shift, and go to state 21

    expr  go to state 100


State 72

   12 statement: expr SEMICOLON .

    $default  reduce using rule 12 (statement)


State 73

   26 for_stmt: S_FOR LPAREN declaration . SEMICOLON expr SEMICOLON expr RPAREN statement

    SEMICOLON  shift, and go to state 101


State 74

   16 declaration: T . IDLIST

    LOP_PLUS     shift, and go to state 12
    LOP_MINUS    shift, and go to state 13
    LOP_OPPSITE  shift, and go to state 14
    LPAREN       shift, and go to state 16
    IDENTIFIER   shift, and go to state 18
    INTEGER      shift, and go to state 19
    CHAR         shift, and go to state 20
    STRING       shift, and go to state 21

    IDLIST  go to state 50
    expr    go to state 51


State 75

   25 for_stmt: S_FOR LPAREN expr . SEMICOLON expr SEMICOLON expr RPAREN statement
   41 expr: expr . LOP_PLUS_ASSIGN expr
   42     | expr . LOP_MINUS_ASSIGN expr
   43     | expr . LOP_ASSIGN expr
   44     | expr . LOP_PLUS expr
   45     | expr . LOP_MINUS expr
   46     | expr . LOP_MUL expr
   47     | expr . LOP_DIV expr
   48     | expr . LOP_MOD expr
   49     | expr . LOP_INC
   50     | expr . LOP_DEC
   51     | expr . LOP_AND expr
   52     | expr . LOP_OR expr
   54     | expr . LOP_LE expr
   55     | expr . LOP_GE expr
   56     | expr . LOP_NZ expr
   57     | expr . LOP_GT expr
   58     | expr . LOP_LT expr
   59     | expr . LOP_EQ expr

    LOP_ASSIGN        shift, and go to state 54
    LOP_PLUS          shift, and go to state 55
    LOP_MINUS         shift, and go to state 56
    LOP_MUL           shift, and go to state 57
    LOP_DIV           shift, and go to state 58
    LOP_MOD           shift, and go to state 59
    LOP_INC           shift, and go to state 60
    LOP_DEC           shift, and go to state 61
    LOP_PLUS_ASSIGN   shift, and go to state 62
    LOP_MINUS_ASSIGN  shift, and go to state 63
    LOP_AND           shift, and go to state 64
    LOP_OR            shift, and go to state 65
    LOP_LE            shift, and go to state 66
    LOP_GE            shift, and go to state 67
    LOP_NZ            shift, and go to state 68
    LOP_GT            shift, and go to state 69
    LOP_LT            shift, and go to state 70
    LOP_EQ            shift, and go to state 71
    SEMICOLON         shift, and go to state 102


State 76

   28 if_stmt: S_IF LPAREN expr . RPAREN statement
   29        | S_IF LPAREN expr . RPAREN statement S_ELSE statement
   41 expr: expr . LOP_PLUS_ASSIGN expr
   42     | expr . LOP_MINUS_ASSIGN expr
   43     | expr . LOP_ASSIGN expr
   44     | expr . LOP_PLUS expr
   45     | expr . LOP_MINUS expr
   46     | expr . LOP_MUL expr
   47     | expr . LOP_DIV expr
   48     | expr . LOP_MOD expr
   49     | expr . LOP_INC
   50     | expr . LOP_DEC
   51     | expr . LOP_AND expr
   52     | expr . LOP_OR expr
   54     | expr . LOP_LE expr
   55     | expr . LOP_GE expr
   56     | expr . LOP_NZ expr
   57     | expr . LOP_GT expr
   58     | expr . LOP_LT expr
   59     | expr . LOP_EQ expr

    LOP_ASSIGN        shift, and go to state 54
    LOP_PLUS          shift, and go to state 55
    LOP_MINUS         shift, and go to state 56
    LOP_MUL           shift, and go to state 57
    LOP_DIV           shift, and go to state 58
    LOP_MOD           shift, and go to state 59
    LOP_INC           shift, and go to state 60
    LOP_DEC           shift, and go to state 61
    LOP_PLUS_ASSIGN   shift, and go to state 62
    LOP_MINUS_ASSIGN  shift, and go to state 63
    LOP_AND           shift, and go to state 64
    LOP_OR            shift, and go to state 65
    LOP_LE            shift, and go to state 66
    LOP_GE            shift, and go to state 67
    LOP_NZ            shift, and go to state 68
    LOP_GT            shift, and go to state 69
    LOP_LT            shift, and go to state 70
    LOP_EQ            shift, and go to state 71
    RPAREN            shift, and go to state 103


State 77

   27 while_stmt: S_WHILE LPAREN expr . RPAREN statement
   41 expr: expr . LOP_PLUS_ASSIGN expr
   42     | expr . LOP_MINUS_ASSIGN expr
   43     | expr . LOP_ASSIGN expr
   44     | expr . LOP_PLUS expr
   45     | expr . LOP_MINUS expr
   46     | expr . LOP_MUL expr
   47     | expr . LOP_DIV expr
   48     | expr . LOP_MOD expr
   49     | expr . LOP_INC
   50     | expr . LOP_DEC
   51     | expr . LOP_AND expr
   52     | expr . LOP_OR expr
   54     | expr . LOP_LE expr
   55     | expr . LOP_GE expr
   56     | expr . LOP_NZ expr
   57     | expr . LOP_GT expr
   58     | expr . LOP_LT expr
   59     | expr . LOP_EQ expr

    LOP_ASSIGN        shift, and go to state 54
    LOP_PLUS          shift, and go to state 55
    LOP_MINUS         shift, and go to state 56
    LOP_MUL           shift, and go to state 57
    LOP_DIV           shift, and go to state 58
    LOP_MOD           shift, and go to state 59
    LOP_INC           shift, and go to state 60
    LOP_DEC           shift, and go to state 61
    LOP_PLUS_ASSIGN   shift, and go to state 62
    LOP_MINUS_ASSIGN  shift, and go to state 63
    LOP_AND           shift, and go to state 64
    LOP_OR            shift, and go to state 65
    LOP_LE            shift, and go to state 66
    LOP_GE            shift, and go to state 67
    LOP_NZ            shift, and go to state 68
    LOP_GT            shift, and go to state 69
    LOP_LT            shift, and go to state 70
    LOP_EQ            shift, and go to state 71
    RPAREN            shift, and go to state 104


State 78

   15 return_stmt: S_RETURN expr SEMICOLON .

    $default  reduce using rule 15 (return_stmt)


State 79

   30 printf: P_PRINTF LPAREN STRING . RPAREN
   31       | P_PRINTF LPAREN STRING . COMMA specialID RPAREN

    COMMA   shift, and go to state 105
    RPAREN  shift, and go to state 106


State 80

   32 scanf: P_SCANF LPAREN STRING . COMMA specialID RPAREN

    COMMA  shift, and go to state 107


State 81

   60 expr: LPAREN expr RPAREN .

    $default  reduce using rule 60 (expr)


State 82

    6 statement: LBRACE statements RBRACE .

    $default  reduce using rule 6 (statement)


State 83

   17 func: T IDENTIFIER LPAREN . RPAREN statement

    RPAREN  shift, and go to state 108


State 84

   23 IDLIST: IDLIST COMMA . expr

    LOP_PLUS     shift, and go to state 12
    LOP_MINUS    shift, and go to state 13
    LOP_OPPSITE  shift, and go to state 14
    LPAREN       shift, and go to state 16
    IDENTIFIER   shift, and go to state 18
    INTEGER      shift, and go to state 19
    CHAR         shift, and go to state 20
    STRING       shift, and go to state 21

    expr  go to state 109


State 85

   41 expr: expr . LOP_PLUS_ASSIGN expr
   42     | expr . LOP_MINUS_ASSIGN expr
   43     | expr . LOP_ASSIGN expr
   43     | expr LOP_ASSIGN expr .
   44     | expr . LOP_PLUS expr
   45     | expr . LOP_MINUS expr
   46     | expr . LOP_MUL expr
   47     | expr . LOP_DIV expr
   48     | expr . LOP_MOD expr
   49     | expr . LOP_INC
   50     | expr . LOP_DEC
   51     | expr . LOP_AND expr
   52     | expr . LOP_OR expr
   54     | expr . LOP_LE expr
   55     | expr . LOP_GE expr
   56     | expr . LOP_NZ expr
   57     | expr . LOP_GT expr
   58     | expr . LOP_LT expr
   59     | expr . LOP_EQ expr

    LOP_ASSIGN        shift, and go to state 54
    LOP_PLUS          shift, and go to state 55
    LOP_MINUS         shift, and go to state 56
    LOP_MUL           shift, and go to state 57
    LOP_DIV           shift, and go to state 58
    LOP_MOD           shift, and go to state 59
    LOP_INC           shift, and go to state 60
    LOP_DEC           shift, and go to state 61
    LOP_PLUS_ASSIGN   shift, and go to state 62
    LOP_MINUS_ASSIGN  shift, and go to state 63
    LOP_AND           shift, and go to state 64
    LOP_OR            shift, and go to state 65
    LOP_LE            shift, and go to state 66
    LOP_GE            shift, and go to state 67
    LOP_NZ            shift, and go to state 68
    LOP_GT            shift, and go to state 69
    LOP_LT            shift, and go to state 70
    LOP_EQ            shift, and go to state 71

    $default  reduce using rule 43 (expr)


State 86

   41 expr: expr . LOP_PLUS_ASSIGN expr
   42     | expr . LOP_MINUS_ASSIGN expr
   43     | expr . LOP_ASSIGN expr
   44     | expr . LOP_PLUS expr
   44     | expr LOP_PLUS expr .
   45     | expr . LOP_MINUS expr
   46     | expr . LOP_MUL expr
   47     | expr . LOP_DIV expr
   48     | expr . LOP_MOD expr
   49     | expr . LOP_INC
   50     | expr . LOP_DEC
   51     | expr . LOP_AND expr
   52     | expr . LOP_OR expr
   54     | expr . LOP_LE expr
   55     | expr . LOP_GE expr
   56     | expr . LOP_NZ expr
   57     | expr . LOP_GT expr
   58     | expr . LOP_LT expr
   59     | expr . LOP_EQ expr

    LOP_MUL  shift, and go to state 57
    LOP_DIV  shift, and go to state 58
    LOP_MOD  shift, and go to state 59
    LOP_INC  shift, and go to state 60
    LOP_DEC  shift, and go to state 61

    $default  reduce using rule 44 (expr)


State 87

   41 expr: expr . LOP_PLUS_ASSIGN expr
   42     | expr . LOP_MINUS_ASSIGN expr
   43     | expr . LOP_ASSIGN expr
   44     | expr . LOP_PLUS expr
   45     | expr . LOP_MINUS expr
   45     | expr LOP_MINUS expr .
   46     | expr . LOP_MUL expr
   47     | expr . LOP_DIV expr
   48     | expr . LOP_MOD expr
   49     | expr . LOP_INC
   50     | expr . LOP_DEC
   51     | expr . LOP_AND expr
   52     | expr . LOP_OR expr
   54     | expr . LOP_LE expr
   55     | expr . LOP_GE expr
   56     | expr . LOP_NZ expr
   57     | expr . LOP_GT expr
   58     | expr . LOP_LT expr
   59     | expr . LOP_EQ expr

    LOP_MUL  shift, and go to state 57
    LOP_DIV  shift, and go to state 58
    LOP_MOD  shift, and go to state 59
    LOP_INC  shift, and go to state 60
    LOP_DEC  shift, and go to state 61

    $default  reduce using rule 45 (expr)


State 88

   41 expr: expr . LOP_PLUS_ASSIGN expr
   42     | expr . LOP_MINUS_ASSIGN expr
   43     | expr . LOP_ASSIGN expr
   44     | expr . LOP_PLUS expr
   45     | expr . LOP_MINUS expr
   46     | expr . LOP_MUL expr
   46     | expr LOP_MUL expr .
   47     | expr . LOP_DIV expr
   48     | expr . LOP_MOD expr
   49     | expr . LOP_INC
   50     | expr . LOP_DEC
   51     | expr . LOP_AND expr
   52     | expr . LOP_OR expr
   54     | expr . LOP_LE expr
   55     | expr . LOP_GE expr
   56     | expr . LOP_NZ expr
   57     | expr . LOP_GT expr
   58     | expr . LOP_LT expr
   59     | expr . LOP_EQ expr

    LOP_INC  shift, and go to state 60
    LOP_DEC  shift, and go to state 61

    $default  reduce using rule 46 (expr)


State 89

   41 expr: expr . LOP_PLUS_ASSIGN expr
   42     | expr . LOP_MINUS_ASSIGN expr
   43     | expr . LOP_ASSIGN expr
   44     | expr . LOP_PLUS expr
   45     | expr . LOP_MINUS expr
   46     | expr . LOP_MUL expr
   47     | expr . LOP_DIV expr
   47     | expr LOP_DIV expr .
   48     | expr . LOP_MOD expr
   49     | expr . LOP_INC
   50     | expr . LOP_DEC
   51     | expr . LOP_AND expr
   52     | expr . LOP_OR expr
   54     | expr . LOP_LE expr
   55     | expr . LOP_GE expr
   56     | expr . LOP_NZ expr
   57     | expr . LOP_GT expr
   58     | expr . LOP_LT expr
   59     | expr . LOP_EQ expr

    LOP_INC  shift, and go to state 60
    LOP_DEC  shift, and go to state 61

    $default  reduce using rule 47 (expr)


State 90

   41 expr: expr . LOP_PLUS_ASSIGN expr
   42     | expr . LOP_MINUS_ASSIGN expr
   43     | expr . LOP_ASSIGN expr
   44     | expr . LOP_PLUS expr
   45     | expr . LOP_MINUS expr
   46     | expr . LOP_MUL expr
   47     | expr . LOP_DIV expr
   48     | expr . LOP_MOD expr
   48     | expr LOP_MOD expr .
   49     | expr . LOP_INC
   50     | expr . LOP_DEC
   51     | expr . LOP_AND expr
   52     | expr . LOP_OR expr
   54     | expr . LOP_LE expr
   55     | expr . LOP_GE expr
   56     | expr . LOP_NZ expr
   57     | expr . LOP_GT expr
   58     | expr . LOP_LT expr
   59     | expr . LOP_EQ expr

    LOP_INC  shift, and go to state 60
    LOP_DEC  shift, and go to state 61

    $default  reduce using rule 48 (expr)


State 91

   41 expr: expr . LOP_PLUS_ASSIGN expr
   41     | expr LOP_PLUS_ASSIGN expr .
   42     | expr . LOP_MINUS_ASSIGN expr
   43     | expr . LOP_ASSIGN expr
   44     | expr . LOP_PLUS expr
   45     | expr . LOP_MINUS expr
   46     | expr . LOP_MUL expr
   47     | expr . LOP_DIV expr
   48     | expr . LOP_MOD expr
   49     | expr . LOP_INC
   50     | expr . LOP_DEC
   51     | expr . LOP_AND expr
   52     | expr . LOP_OR expr
   54     | expr . LOP_LE expr
   55     | expr . LOP_GE expr
   56     | expr . LOP_NZ expr
   57     | expr . LOP_GT expr
   58     | expr . LOP_LT expr
   59     | expr . LOP_EQ expr

    LOP_ASSIGN        shift, and go to state 54
    LOP_PLUS          shift, and go to state 55
    LOP_MINUS         shift, and go to state 56
    LOP_MUL           shift, and go to state 57
    LOP_DIV           shift, and go to state 58
    LOP_MOD           shift, and go to state 59
    LOP_INC           shift, and go to state 60
    LOP_DEC           shift, and go to state 61
    LOP_PLUS_ASSIGN   shift, and go to state 62
    LOP_MINUS_ASSIGN  shift, and go to state 63
    LOP_AND           shift, and go to state 64
    LOP_OR            shift, and go to state 65
    LOP_LE            shift, and go to state 66
    LOP_GE            shift, and go to state 67
    LOP_NZ            shift, and go to state 68
    LOP_GT            shift, and go to state 69
    LOP_LT            shift, and go to state 70
    LOP_EQ            shift, and go to state 71

    $default  reduce using rule 41 (expr)


State 92

   41 expr: expr . LOP_PLUS_ASSIGN expr
   42     | expr . LOP_MINUS_ASSIGN expr
   42     | expr LOP_MINUS_ASSIGN expr .
   43     | expr . LOP_ASSIGN expr
   44     | expr . LOP_PLUS expr
   45     | expr . LOP_MINUS expr
   46     | expr . LOP_MUL expr
   47     | expr . LOP_DIV expr
   48     | expr . LOP_MOD expr
   49     | expr . LOP_INC
   50     | expr . LOP_DEC
   51     | expr . LOP_AND expr
   52     | expr . LOP_OR expr
   54     | expr . LOP_LE expr
   55     | expr . LOP_GE expr
   56     | expr . LOP_NZ expr
   57     | expr . LOP_GT expr
   58     | expr . LOP_LT expr
   59     | expr . LOP_EQ expr

    LOP_ASSIGN        shift, and go to state 54
    LOP_PLUS          shift, and go to state 55
    LOP_MINUS         shift, and go to state 56
    LOP_MUL           shift, and go to state 57
    LOP_DIV           shift, and go to state 58
    LOP_MOD           shift, and go to state 59
    LOP_INC           shift, and go to state 60
    LOP_DEC           shift, and go to state 61
    LOP_PLUS_ASSIGN   shift, and go to state 62
    LOP_MINUS_ASSIGN  shift, and go to state 63
    LOP_AND           shift, and go to state 64
    LOP_OR            shift, and go to state 65
    LOP_LE            shift, and go to state 66
    LOP_GE            shift, and go to state 67
    LOP_NZ            shift, and go to state 68
    LOP_GT            shift, and go to state 69
    LOP_LT            shift, and go to state 70
    LOP_EQ            shift, and go to state 71

    $default  reduce using rule 42 (expr)


State 93

   41 expr: expr . LOP_PLUS_ASSIGN expr
   42     | expr . LOP_MINUS_ASSIGN expr
   43     | expr . LOP_ASSIGN expr
   44     | expr . LOP_PLUS expr
   45     | expr . LOP_MINUS expr
   46     | expr . LOP_MUL expr
   47     | expr . LOP_DIV expr
   48     | expr . LOP_MOD expr
   49     | expr . LOP_INC
   50     | expr . LOP_DEC
   51     | expr . LOP_AND expr
   51     | expr LOP_AND expr .
   52     | expr . LOP_OR expr
   54     | expr . LOP_LE expr
   55     | expr . LOP_GE expr
   56     | expr . LOP_NZ expr
   57     | expr . LOP_GT expr
   58     | expr . LOP_LT expr
   59     | expr . LOP_EQ expr

    LOP_PLUS   shift, and go to state 55
    LOP_MINUS  shift, and go to state 56
    LOP_MUL    shift, and go to state 57
    LOP_DIV    shift, and go to state 58
    LOP_MOD    shift, and go to state 59
    LOP_INC    shift, and go to state 60
    LOP_DEC    shift, and go to state 61
    LOP_LE     shift, and go to state 66
    LOP_GE     shift, and go to state 67
    LOP_NZ     shift, and go to state 68
    LOP_GT     shift, and go to state 69
    LOP_LT     shift, and go to state 70
    LOP_EQ     shift, and go to state 71

    $default  reduce using rule 51 (expr)


State 94

   41 expr: expr . LOP_PLUS_ASSIGN expr
   42     | expr . LOP_MINUS_ASSIGN expr
   43     | expr . LOP_ASSIGN expr
   44     | expr . LOP_PLUS expr
   45     | expr . LOP_MINUS expr
   46     | expr . LOP_MUL expr
   47     | expr . LOP_DIV expr
   48     | expr . LOP_MOD expr
   49     | expr . LOP_INC
   50     | expr . LOP_DEC
   51     | expr . LOP_AND expr
   52     | expr . LOP_OR expr
   52     | expr LOP_OR expr .
   54     | expr . LOP_LE expr
   55     | expr . LOP_GE expr
   56     | expr . LOP_NZ expr
   57     | expr . LOP_GT expr
   58     | expr . LOP_LT expr
   59     | expr . LOP_EQ expr

    LOP_PLUS   shift, and go to state 55
    LOP_MINUS  shift, and go to state 56
    LOP_MUL    shift, and go to state 57
    LOP_DIV    shift, and go to state 58
    LOP_MOD    shift, and go to state 59
    LOP_INC    shift, and go to state 60
    LOP_DEC    shift, and go to state 61
    LOP_AND    shift, and go to state 64
    LOP_LE     shift, and go to state 66
    LOP_GE     shift, and go to state 67
    LOP_NZ     shift, and go to state 68
    LOP_GT     shift, and go to state 69
    LOP_LT     shift, and go to state 70
    LOP_EQ     shift, and go to state 71

    $default  reduce using rule 52 (expr)


State 95

   41 expr: expr . LOP_PLUS_ASSIGN expr
   42     | expr . LOP_MINUS_ASSIGN expr
   43     | expr . LOP_ASSIGN expr
   44     | expr . LOP_PLUS expr
   45     | expr . LOP_MINUS expr
   46     | expr . LOP_MUL expr
   47     | expr . LOP_DIV expr
   48     | expr . LOP_MOD expr
   49     | expr . LOP_INC
   50     | expr . LOP_DEC
   51     | expr . LOP_AND expr
   52     | expr . LOP_OR expr
   54     | expr . LOP_LE expr
   54     | expr LOP_LE expr .
   55     | expr . LOP_GE expr
   56     | expr . LOP_NZ expr
   57     | expr . LOP_GT expr
   58     | expr . LOP_LT expr
   59     | expr . LOP_EQ expr

    LOP_PLUS   shift, and go to state 55
    LOP_MINUS  shift, and go to state 56
    LOP_MUL    shift, and go to state 57
    LOP_DIV    shift, and go to state 58
    LOP_MOD    shift, and go to state 59
    LOP_INC    shift, and go to state 60
    LOP_DEC    shift, and go to state 61

    $default  reduce using rule 54 (expr)


State 96

   41 expr: expr . LOP_PLUS_ASSIGN expr
   42     | expr . LOP_MINUS_ASSIGN expr
   43     | expr . LOP_ASSIGN expr
   44     | expr . LOP_PLUS expr
   45     | expr . LOP_MINUS expr
   46     | expr . LOP_MUL expr
   47     | expr . LOP_DIV expr
   48     | expr . LOP_MOD expr
   49     | expr . LOP_INC
   50     | expr . LOP_DEC
   51     | expr . LOP_AND expr
   52     | expr . LOP_OR expr
   54     | expr . LOP_LE expr
   55     | expr . LOP_GE expr
   55     | expr LOP_GE expr .
   56     | expr . LOP_NZ expr
   57     | expr . LOP_GT expr
   58     | expr . LOP_LT expr
   59     | expr . LOP_EQ expr

    LOP_PLUS   shift, and go to state 55
    LOP_MINUS  shift, and go to state 56
    LOP_MUL    shift, and go to state 57
    LOP_DIV    shift, and go to state 58
    LOP_MOD    shift, and go to state 59
    LOP_INC    shift, and go to state 60
    LOP_DEC    shift, and go to state 61

    $default  reduce using rule 55 (expr)


State 97

   41 expr: expr . LOP_PLUS_ASSIGN expr
   42     | expr . LOP_MINUS_ASSIGN expr
   43     | expr . LOP_ASSIGN expr
   44     | expr . LOP_PLUS expr
   45     | expr . LOP_MINUS expr
   46     | expr . LOP_MUL expr
   47     | expr . LOP_DIV expr
   48     | expr . LOP_MOD expr
   49     | expr . LOP_INC
   50     | expr . LOP_DEC
   51     | expr . LOP_AND expr
   52     | expr . LOP_OR expr
   54     | expr . LOP_LE expr
   55     | expr . LOP_GE expr
   56     | expr . LOP_NZ expr
   56     | expr LOP_NZ expr .
   57     | expr . LOP_GT expr
   58     | expr . LOP_LT expr
   59     | expr . LOP_EQ expr

    LOP_PLUS   shift, and go to state 55
    LOP_MINUS  shift, and go to state 56
    LOP_MUL    shift, and go to state 57
    LOP_DIV    shift, and go to state 58
    LOP_MOD    shift, and go to state 59
    LOP_INC    shift, and go to state 60
    LOP_DEC    shift, and go to state 61
    LOP_LE     shift, and go to state 66
    LOP_GE     shift, and go to state 67
    LOP_GT     shift, and go to state 69
    LOP_LT     shift, and go to state 70

    $default  reduce using rule 56 (expr)


State 98

   41 expr: expr . LOP_PLUS_ASSIGN expr
   42     | expr . LOP_MINUS_ASSIGN expr
   43     | expr . LOP_ASSIGN expr
   44     | expr . LOP_PLUS expr
   45     | expr . LOP_MINUS expr
   46     | expr . LOP_MUL expr
   47     | expr . LOP_DIV expr
   48     | expr . LOP_MOD expr
   49     | expr . LOP_INC
   50     | expr . LOP_DEC
   51     | expr . LOP_AND expr
   52     | expr . LOP_OR expr
   54     | expr . LOP_LE expr
   55     | expr . LOP_GE expr
   56     | expr . LOP_NZ expr
   57     | expr . LOP_GT expr
   57     | expr LOP_GT expr .
   58     | expr . LOP_LT expr
   59     | expr . LOP_EQ expr

    LOP_PLUS   shift, and go to state 55
    LOP_MINUS  shift, and go to state 56
    LOP_MUL    shift, and go to state 57
    LOP_DIV    shift, and go to state 58
    LOP_MOD    shift, and go to state 59
    LOP_INC    shift, and go to state 60
    LOP_DEC    shift, and go to state 61

    $default  reduce using rule 57 (expr)


State 99

   41 expr: expr . LOP_PLUS_ASSIGN expr
   42     | expr . LOP_MINUS_ASSIGN expr
   43     | expr . LOP_ASSIGN expr
   44     | expr . LOP_PLUS expr
   45     | expr . LOP_MINUS expr
   46     | expr . LOP_MUL expr
   47     | expr . LOP_DIV expr
   48     | expr . LOP_MOD expr
   49     | expr . LOP_INC
   50     | expr . LOP_DEC
   51     | expr . LOP_AND expr
   52     | expr . LOP_OR expr
   54     | expr . LOP_LE expr
   55     | expr . LOP_GE expr
   56     | expr . LOP_NZ expr
   57     | expr . LOP_GT expr
   58     | expr . LOP_LT expr
   58     | expr LOP_LT expr .
   59     | expr . LOP_EQ expr

    LOP_PLUS   shift, and go to state 55
    LOP_MINUS  shift, and go to state 56
    LOP_MUL    shift, and go to state 57
    LOP_DIV    shift, and go to state 58
    LOP_MOD    shift, and go to state 59
    LOP_INC    shift, and go to state 60
    LOP_DEC    shift, and go to state 61

    $default  reduce using rule 58 (expr)


State 100

   41 expr: expr . LOP_PLUS_ASSIGN expr
   42     | expr . LOP_MINUS_ASSIGN expr
   43     | expr . LOP_ASSIGN expr
   44     | expr . LOP_PLUS expr
   45     | expr . LOP_MINUS expr
   46     | expr . LOP_MUL expr
   47     | expr . LOP_DIV expr
   48     | expr . LOP_MOD expr
   49     | expr . LOP_INC
   50     | expr . LOP_DEC
   51     | expr . LOP_AND expr
   52     | expr . LOP_OR expr
   54     | expr . LOP_LE expr
   55     | expr . LOP_GE expr
   56     | expr . LOP_NZ expr
   57     | expr . LOP_GT expr
   58     | expr . LOP_LT expr
   59     | expr . LOP_EQ expr
   59     | expr LOP_EQ expr .

    LOP_PLUS   shift, and go to state 55
    LOP_MINUS  shift, and go to state 56
    LOP_MUL    shift, and go to state 57
    LOP_DIV    shift, and go to state 58
    LOP_MOD    shift, and go to state 59
    LOP_INC    shift, and go to state 60
    LOP_DEC    shift, and go to state 61
    LOP_LE     shift, and go to state 66
    LOP_GE     shift, and go to state 67
    LOP_GT     shift, and go to state 69
    LOP_LT     shift, and go to state 70

    $default  reduce using rule 59 (expr)


State 101

   26 for_stmt: S_FOR LPAREN declaration SEMICOLON . expr SEMICOLON expr RPAREN statement

    LOP_PLUS     shift, and go to state 12
    LOP_MINUS    shift, and go to state 13
    LOP_OPPSITE  shift, and go to state 14
    LPAREN       shift, and go to state 16
    IDENTIFIER   shift, and go to state 18
    INTEGER      shift, and go to state 19
    CHAR         shift, and go to state 20
    STRING       shift, and go to state 21

    expr  go to state 110


State 102

   25 for_stmt: S_FOR LPAREN expr SEMICOLON . expr SEMICOLON expr RPAREN statement

    LOP_PLUS     shift, and go to state 12
    LOP_MINUS    shift, and go to state 13
    LOP_OPPSITE  shift, and go to state 14
    LPAREN       shift, and go to state 16
    IDENTIFIER   shift, and go to state 18
    INTEGER      shift, and go to state 19
    CHAR         shift, and go to state 20
    STRING       shift, and go to state 21

    expr  go to state 111


State 103

   28 if_stmt: S_IF LPAREN expr RPAREN . statement
   29        | S_IF LPAREN expr RPAREN . statement S_ELSE statement

    T_CHAR       shift, and go to state 1
    T_INT        shift, and go to state 2
    T_STRING     shift, and go to state 3
    T_BOOL       shift, and go to state 4
    T_VOID       shift, and go to state 5
    S_FOR        shift, and go to state 6
    S_IF         shift, and go to state 7
    S_WHILE      shift, and go to state 8
    S_RETURN     shift, and go to state 9
    P_PRINTF     shift, and go to state 10
    P_SCANF      shift, and go to state 11
    LOP_PLUS     shift, and go to state 12
    LOP_MINUS    shift, and go to state 13
    LOP_OPPSITE  shift, and go to state 14
    SEMICOLON    shift, and go to state 15
    LPAREN       shift, and go to state 16
    LBRACE       shift, and go to state 17
    IDENTIFIER   shift, and go to state 18
    INTEGER      shift, and go to state 19
    CHAR         shift, and go to state 20
    STRING       shift, and go to state 21

    statement    go to state 112
    return_stmt  go to state 25
    declaration  go to state 26
    func         go to state 27
    T            go to state 28
    for_stmt     go to state 29
    while_stmt   go to state 30
    if_stmt      go to state 31
    printf       go to state 32
    scanf        go to state 33
    expr         go to state 34


State 104

   27 while_stmt: S_WHILE LPAREN expr RPAREN . statement

    T_CHAR       shift, and go to state 1
    T_INT        shift, and go to state 2
    T_STRING     shift, and go to state 3
    T_BOOL       shift, and go to state 4
    T_VOID       shift, and go to state 5
    S_FOR        shift, and go to state 6
    S_IF         shift, and go to state 7
    S_WHILE      shift, and go to state 8
    S_RETURN     shift, and go to state 9
    P_PRINTF     shift, and go to state 10
    P_SCANF      shift, and go to state 11
    LOP_PLUS     shift, and go to state 12
    LOP_MINUS    shift, and go to state 13
    LOP_OPPSITE  shift, and go to state 14
    SEMICOLON    shift, and go to state 15
    LPAREN       shift, and go to state 16
    LBRACE       shift, and go to state 17
    IDENTIFIER   shift, and go to state 18
    INTEGER      shift, and go to state 19
    CHAR         shift, and go to state 20
    STRING       shift, and go to state 21

    statement    go to state 113
    return_stmt  go to state 25
    declaration  go to state 26
    func         go to state 27
    T            go to state 28
    for_stmt     go to state 29
    while_stmt   go to state 30
    if_stmt      go to state 31
    printf       go to state 32
    scanf        go to state 33
    expr         go to state 34


State 105

   31 printf: P_PRINTF LPAREN STRING COMMA . specialID RPAREN

    QUOTE       shift, and go to state 114
    IDENTIFIER  shift, and go to state 115

    specialID  go to state 116


State 106

   30 printf: P_PRINTF LPAREN STRING RPAREN .

    $default  reduce using rule 30 (printf)


State 107

   32 scanf: P_SCANF LPAREN STRING COMMA . specialID RPAREN

    QUOTE       shift, and go to state 114
    IDENTIFIER  shift, and go to state 115

    specialID  go to state 117


State 108

   17 func: T IDENTIFIER LPAREN RPAREN . statement

    T_CHAR       shift, and go to state 1
    T_INT        shift, and go to state 2
    T_STRING     shift, and go to state 3
    T_BOOL       shift, and go to state 4
    T_VOID       shift, and go to state 5
    S_FOR        shift, and go to state 6
    S_IF         shift, and go to state 7
    S_WHILE      shift, and go to state 8
    S_RETURN     shift, and go to state 9
    P_PRINTF     shift, and go to state 10
    P_SCANF      shift, and go to state 11
    LOP_PLUS     shift, and go to state 12
    LOP_MINUS    shift, and go to state 13
    LOP_OPPSITE  shift, and go to state 14
    SEMICOLON    shift, and go to state 15
    LPAREN       shift, and go to state 16
    LBRACE       shift, and go to state 17
    IDENTIFIER   shift, and go to state 18
    INTEGER      shift, and go to state 19
    CHAR         shift, and go to state 20
    STRING       shift, and go to state 21

    statement    go to state 118
    return_stmt  go to state 25
    declaration  go to state 26
    func         go to state 27
    T            go to state 28
    for_stmt     go to state 29
    while_stmt   go to state 30
    if_stmt      go to state 31
    printf       go to state 32
    scanf        go to state 33
    expr         go to state 34


State 109

   23 IDLIST: IDLIST COMMA expr .
   41 expr: expr . LOP_PLUS_ASSIGN expr
   42     | expr . LOP_MINUS_ASSIGN expr
   43     | expr . LOP_ASSIGN expr
   44     | expr . LOP_PLUS expr
   45     | expr . LOP_MINUS expr
   46     | expr . LOP_MUL expr
   47     | expr . LOP_DIV expr
   48     | expr . LOP_MOD expr
   49     | expr . LOP_INC
   50     | expr . LOP_DEC
   51     | expr . LOP_AND expr
   52     | expr . LOP_OR expr
   54     | expr . LOP_LE expr
   55     | expr . LOP_GE expr
   56     | expr . LOP_NZ expr
   57     | expr . LOP_GT expr
   58     | expr . LOP_LT expr
   59     | expr . LOP_EQ expr

    LOP_ASSIGN        shift, and go to state 54
    LOP_PLUS          shift, and go to state 55
    LOP_MINUS         shift, and go to state 56
    LOP_MUL           shift, and go to state 57
    LOP_DIV           shift, and go to state 58
    LOP_MOD           shift, and go to state 59
    LOP_INC           shift, and go to state 60
    LOP_DEC           shift, and go to state 61
    LOP_PLUS_ASSIGN   shift, and go to state 62
    LOP_MINUS_ASSIGN  shift, and go to state 63
    LOP_AND           shift, and go to state 64
    LOP_OR            shift, and go to state 65
    LOP_LE            shift, and go to state 66
    LOP_GE            shift, and go to state 67
    LOP_NZ            shift, and go to state 68
    LOP_GT            shift, and go to state 69
    LOP_LT            shift, and go to state 70
    LOP_EQ            shift, and go to state 71

    $default  reduce using rule 23 (IDLIST)


State 110

   26 for_stmt: S_FOR LPAREN declaration SEMICOLON expr . SEMICOLON expr RPAREN statement
   41 expr: expr . LOP_PLUS_ASSIGN expr
   42     | expr . LOP_MINUS_ASSIGN expr
   43     | expr . LOP_ASSIGN expr
   44     | expr . LOP_PLUS expr
   45     | expr . LOP_MINUS expr
   46     | expr . LOP_MUL expr
   47     | expr . LOP_DIV expr
   48     | expr . LOP_MOD expr
   49     | expr . LOP_INC
   50     | expr . LOP_DEC
   51     | expr . LOP_AND expr
   52     | expr . LOP_OR expr
   54     | expr . LOP_LE expr
   55     | expr . LOP_GE expr
   56     | expr . LOP_NZ expr
   57     | expr . LOP_GT expr
   58     | expr . LOP_LT expr
   59     | expr . LOP_EQ expr

    LOP_ASSIGN        shift, and go to state 54
    LOP_PLUS          shift, and go to state 55
    LOP_MINUS         shift, and go to state 56
    LOP_MUL           shift, and go to state 57
    LOP_DIV           shift, and go to state 58
    LOP_MOD           shift, and go to state 59
    LOP_INC           shift, and go to state 60
    LOP_DEC           shift, and go to state 61
    LOP_PLUS_ASSIGN   shift, and go to state 62
    LOP_MINUS_ASSIGN  shift, and go to state 63
    LOP_AND           shift, and go to state 64
    LOP_OR            shift, and go to state 65
    LOP_LE            shift, and go to state 66
    LOP_GE            shift, and go to state 67
    LOP_NZ            shift, and go to state 68
    LOP_GT            shift, and go to state 69
    LOP_LT            shift, and go to state 70
    LOP_EQ            shift, and go to state 71
    SEMICOLON         shift, and go to state 119


State 111

   25 for_stmt: S_FOR LPAREN expr SEMICOLON expr . SEMICOLON expr RPAREN statement
   41 expr: expr . LOP_PLUS_ASSIGN expr
   42     | expr . LOP_MINUS_ASSIGN expr
   43     | expr . LOP_ASSIGN expr
   44     | expr . LOP_PLUS expr
   45     | expr . LOP_MINUS expr
   46     | expr . LOP_MUL expr
   47     | expr . LOP_DIV expr
   48     | expr . LOP_MOD expr
   49     | expr . LOP_INC
   50     | expr . LOP_DEC
   51     | expr . LOP_AND expr
   52     | expr . LOP_OR expr
   54     | expr . LOP_LE expr
   55     | expr . LOP_GE expr
   56     | expr . LOP_NZ expr
   57     | expr . LOP_GT expr
   58     | expr . LOP_LT expr
   59     | expr . LOP_EQ expr

    LOP_ASSIGN        shift, and go to state 54
    LOP_PLUS          shift, and go to state 55
    LOP_MINUS         shift, and go to state 56
    LOP_MUL           shift, and go to state 57
    LOP_DIV           shift, and go to state 58
    LOP_MOD           shift, and go to state 59
    LOP_INC           shift, and go to state 60
    LOP_DEC           shift, and go to state 61
    LOP_PLUS_ASSIGN   shift, and go to state 62
    LOP_MINUS_ASSIGN  shift, and go to state 63
    LOP_AND           shift, and go to state 64
    LOP_OR            shift, and go to state 65
    LOP_LE            shift, and go to state 66
    LOP_GE            shift, and go to state 67
    LOP_NZ            shift, and go to state 68
    LOP_GT            shift, and go to state 69
    LOP_LT            shift, and go to state 70
    LOP_EQ            shift, and go to state 71
    SEMICOLON         shift, and go to state 120


State 112

   28 if_stmt: S_IF LPAREN expr RPAREN statement .
   29        | S_IF LPAREN expr RPAREN statement . S_ELSE statement

    S_ELSE  shift, and go to state 121

    $default  reduce using rule 28 (if_stmt)


State 113

   27 while_stmt: S_WHILE LPAREN expr RPAREN statement .

    $default  reduce using rule 27 (while_stmt)


State 114

   34 specialID: QUOTE . IDENTIFIER

    IDENTIFIER  shift, and go to state 122


State 115

   33 specialID: IDENTIFIER .

    $default  reduce using rule 33 (specialID)


State 116

   31 printf: P_PRINTF LPAREN STRING COMMA specialID . RPAREN
   35 specialID: specialID . COMMA IDENTIFIER
   36          | specialID . COMMA QUOTE IDENTIFIER

    COMMA   shift, and go to state 123
    RPAREN  shift, and go to state 124


State 117

   32 scanf: P_SCANF LPAREN STRING COMMA specialID . RPAREN
   35 specialID: specialID . COMMA IDENTIFIER
   36          | specialID . COMMA QUOTE IDENTIFIER

    COMMA   shift, and go to state 123
    RPAREN  shift, and go to state 125


State 118

   17 func: T IDENTIFIER LPAREN RPAREN statement .

    $default  reduce using rule 17 (func)


State 119

   26 for_stmt: S_FOR LPAREN declaration SEMICOLON expr SEMICOLON . expr RPAREN statement

    LOP_PLUS     shift, and go to state 12
    LOP_MINUS    shift, and go to state 13
    LOP_OPPSITE  shift, and go to state 14
    LPAREN       shift, and go to state 16
    IDENTIFIER   shift, and go to state 18
    INTEGER      shift, and go to state 19
    CHAR         shift, and go to state 20
    STRING       shift, and go to state 21

    expr  go to state 126


State 120

   25 for_stmt: S_FOR LPAREN expr SEMICOLON expr SEMICOLON . expr RPAREN statement

    LOP_PLUS     shift, and go to state 12
    LOP_MINUS    shift, and go to state 13
    LOP_OPPSITE  shift, and go to state 14
    LPAREN       shift, and go to state 16
    IDENTIFIER   shift, and go to state 18
    INTEGER      shift, and go to state 19
    CHAR         shift, and go to state 20
    STRING       shift, and go to state 21

    expr  go to state 127


State 121

   29 if_stmt: S_IF LPAREN expr RPAREN statement S_ELSE . statement

    T_CHAR       shift, and go to state 1
    T_INT        shift, and go to state 2
    T_STRING     shift, and go to state 3
    T_BOOL       shift, and go to state 4
    T_VOID       shift, and go to state 5
    S_FOR        shift, and go to state 6
    S_IF         shift, and go to state 7
    S_WHILE      shift, and go to state 8
    S_RETURN     shift, and go to state 9
    P_PRINTF     shift, and go to state 10
    P_SCANF      shift, and go to state 11
    LOP_PLUS     shift, and go to state 12
    LOP_MINUS    shift, and go to state 13
    LOP_OPPSITE  shift, and go to state 14
    SEMICOLON    shift, and go to state 15
    LPAREN       shift, and go to state 16
    LBRACE       shift, and go to state 17
    IDENTIFIER   shift, and go to state 18
    INTEGER      shift, and go to state 19
    CHAR         shift, and go to state 20
    STRING       shift, and go to state 21

    statement    go to state 128
    return_stmt  go to state 25
    declaration  go to state 26
    func         go to state 27
    T            go to state 28
    for_stmt     go to state 29
    while_stmt   go to state 30
    if_stmt      go to state 31
    printf       go to state 32
    scanf        go to state 33
    expr         go to state 34


State 122

   34 specialID: QUOTE IDENTIFIER .

    $default  reduce using rule 34 (specialID)


State 123

   35 specialID: specialID COMMA . IDENTIFIER
   36          | specialID COMMA . QUOTE IDENTIFIER

    QUOTE       shift, and go to state 129
    IDENTIFIER  shift, and go to state 130


State 124

   31 printf: P_PRINTF LPAREN STRING COMMA specialID RPAREN .

    $default  reduce using rule 31 (printf)


State 125

   32 scanf: P_SCANF LPAREN STRING COMMA specialID RPAREN .

    $default  reduce using rule 32 (scanf)


State 126

   26 for_stmt: S_FOR LPAREN declaration SEMICOLON expr SEMICOLON expr . RPAREN statement
   41 expr: expr . LOP_PLUS_ASSIGN expr
   42     | expr . LOP_MINUS_ASSIGN expr
   43     | expr . LOP_ASSIGN expr
   44     | expr . LOP_PLUS expr
   45     | expr . LOP_MINUS expr
   46     | expr . LOP_MUL expr
   47     | expr . LOP_DIV expr
   48     | expr . LOP_MOD expr
   49     | expr . LOP_INC
   50     | expr . LOP_DEC
   51     | expr . LOP_AND expr
   52     | expr . LOP_OR expr
   54     | expr . LOP_LE expr
   55     | expr . LOP_GE expr
   56     | expr . LOP_NZ expr
   57     | expr . LOP_GT expr
   58     | expr . LOP_LT expr
   59     | expr . LOP_EQ expr

    LOP_ASSIGN        shift, and go to state 54
    LOP_PLUS          shift, and go to state 55
    LOP_MINUS         shift, and go to state 56
    LOP_MUL           shift, and go to state 57
    LOP_DIV           shift, and go to state 58
    LOP_MOD           shift, and go to state 59
    LOP_INC           shift, and go to state 60
    LOP_DEC           shift, and go to state 61
    LOP_PLUS_ASSIGN   shift, and go to state 62
    LOP_MINUS_ASSIGN  shift, and go to state 63
    LOP_AND           shift, and go to state 64
    LOP_OR            shift, and go to state 65
    LOP_LE            shift, and go to state 66
    LOP_GE            shift, and go to state 67
    LOP_NZ            shift, and go to state 68
    LOP_GT            shift, and go to state 69
    LOP_LT            shift, and go to state 70
    LOP_EQ            shift, and go to state 71
    RPAREN            shift, and go to state 131


State 127

   25 for_stmt: S_FOR LPAREN expr SEMICOLON expr SEMICOLON expr . RPAREN statement
   41 expr: expr . LOP_PLUS_ASSIGN expr
   42     | expr . LOP_MINUS_ASSIGN expr
   43     | expr . LOP_ASSIGN expr
   44     | expr . LOP_PLUS expr
   45     | expr . LOP_MINUS expr
   46     | expr . LOP_MUL expr
   47     | expr . LOP_DIV expr
   48     | expr . LOP_MOD expr
   49     | expr . LOP_INC
   50     | expr . LOP_DEC
   51     | expr . LOP_AND expr
   52     | expr . LOP_OR expr
   54     | expr . LOP_LE expr
   55     | expr . LOP_GE expr
   56     | expr . LOP_NZ expr
   57     | expr . LOP_GT expr
   58     | expr . LOP_LT expr
   59     | expr . LOP_EQ expr

    LOP_ASSIGN        shift, and go to state 54
    LOP_PLUS          shift, and go to state 55
    LOP_MINUS         shift, and go to state 56
    LOP_MUL           shift, and go to state 57
    LOP_DIV           shift, and go to state 58
    LOP_MOD           shift, and go to state 59
    LOP_INC           shift, and go to state 60
    LOP_DEC           shift, and go to state 61
    LOP_PLUS_ASSIGN   shift, and go to state 62
    LOP_MINUS_ASSIGN  shift, and go to state 63
    LOP_AND           shift, and go to state 64
    LOP_OR            shift, and go to state 65
    LOP_LE            shift, and go to state 66
    LOP_GE            shift, and go to state 67
    LOP_NZ            shift, and go to state 68
    LOP_GT            shift, and go to state 69
    LOP_LT            shift, and go to state 70
    LOP_EQ            shift, and go to state 71
    RPAREN            shift, and go to state 132


State 128

   29 if_stmt: S_IF LPAREN expr RPAREN statement S_ELSE statement .

    $default  reduce using rule 29 (if_stmt)


State 129

   36 specialID: specialID COMMA QUOTE . IDENTIFIER

    IDENTIFIER  shift, and go to state 133


State 130

   35 specialID: specialID COMMA IDENTIFIER .

    $default  reduce using rule 35 (specialID)


State 131

   26 for_stmt: S_FOR LPAREN declaration SEMICOLON expr SEMICOLON expr RPAREN . statement

    T_CHAR       shift, and go to state 1
    T_INT        shift, and go to state 2
    T_STRING     shift, and go to state 3
    T_BOOL       shift, and go to state 4
    T_VOID       shift, and go to state 5
    S_FOR        shift, and go to state 6
    S_IF         shift, and go to state 7
    S_WHILE      shift, and go to state 8
    S_RETURN     shift, and go to state 9
    P_PRINTF     shift, and go to state 10
    P_SCANF      shift, and go to state 11
    LOP_PLUS     shift, and go to state 12
    LOP_MINUS    shift, and go to state 13
    LOP_OPPSITE  shift, and go to state 14
    SEMICOLON    shift, and go to state 15
    LPAREN       shift, and go to state 16
    LBRACE       shift, and go to state 17
    IDENTIFIER   shift, and go to state 18
    INTEGER      shift, and go to state 19
    CHAR         shift, and go to state 20
    STRING       shift, and go to state 21

    statement    go to state 134
    return_stmt  go to state 25
    declaration  go to state 26
    func         go to state 27
    T            go to state 28
    for_stmt     go to state 29
    while_stmt   go to state 30
    if_stmt      go to state 31
    printf       go to state 32
    scanf        go to state 33
    expr         go to state 34


State 132

   25 for_stmt: S_FOR LPAREN expr SEMICOLON expr SEMICOLON expr RPAREN . statement

    T_CHAR       shift, and go to state 1
    T_INT        shift, and go to state 2
    T_STRING     shift, and go to state 3
    T_BOOL       shift, and go to state 4
    T_VOID       shift, and go to state 5
    S_FOR        shift, and go to state 6
    S_IF         shift, and go to state 7
    S_WHILE      shift, and go to state 8
    S_RETURN     shift, and go to state 9
    P_PRINTF     shift, and go to state 10
    P_SCANF      shift, and go to state 11
    LOP_PLUS     shift, and go to state 12
    LOP_MINUS    shift, and go to state 13
    LOP_OPPSITE  shift, and go to state 14
    SEMICOLON    shift, and go to state 15
    LPAREN       shift, and go to state 16
    LBRACE       shift, and go to state 17
    IDENTIFIER   shift, and go to state 18
    INTEGER      shift, and go to state 19
    CHAR         shift, and go to state 20
    STRING       shift, and go to state 21

    statement    go to state 135
    return_stmt  go to state 25
    declaration  go to state 26
    func         go to state 27
    T            go to state 28
    for_stmt     go to state 29
    while_stmt   go to state 30
    if_stmt      go to state 31
    printf       go to state 32
    scanf        go to state 33
    expr         go to state 34


State 133

   36 specialID: specialID COMMA QUOTE IDENTIFIER .

    $default  reduce using rule 36 (specialID)


State 134

   26 for_stmt: S_FOR LPAREN declaration SEMICOLON expr SEMICOLON expr RPAREN statement .

    $default  reduce using rule 26 (for_stmt)


State 135

   25 for_stmt: S_FOR LPAREN expr SEMICOLON expr SEMICOLON expr RPAREN statement .

    $default  reduce using rule 25 (for_stmt)
